- name: Check if file exists
  become: yes
  stat:
    path: "{{ item }}"
  register: file_stats
  with_items:
    - /tmp/go{{ version }}.{{ arch }}.tar.gz
    - /usr/local/go

- name: get specified version archive
  become: yes
  get_url:
    url: "{{ golang.src }}"
    dest: /tmp
  when:
    - file_stats.results[0].stat.exists == False
    - file_stats.results[1].stat.exists == False

- name: Create dest directory if not exists
  become: yes
  file:
    path: "/usr/local/go"
    state: directory
  when:
    - file_stats.results[0].stat.exists == False
    - file_stats.results[1].stat.exists == False

- name: unarchive specified version package  
  become: yes
  command: tar xvzf /tmp/go{{ version }}.{{ arch }}.tar.gz -C /usr/local/go/
  when: file_stats.results[1].stat.exists == False

- name: Find
  command: find /usr/local/go -name "golang.sh"
  register: find
  
- debug: msg="{{ find.stdout }}"

- name: add golang path
  become: yes
  template:
    src: golang.sh
    dest: /etc/profile.d/golang.sh
